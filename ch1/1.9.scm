; Each of these procedures defines a method for adding two positive integers in terms of the procedures inc and dec, which
; increment or decrement the argument by 1. 
(define (+ a b)
	(if (= a 0)
		b
		(inc (+ (dec a) b))))

(define (+ a b)
	(if (= a 0)
		b
		((+ (dec a) (inc b)))))

; Using the substitution model, illustrate the process generated by each procedure in evaluating (+ 4 5).
; Are these processes iterative or recursive?

; For both of these, I'll assume inc and dec just work once the operands are fully resolved and we don't use our 
; modified version of + to define them.
;
; Let's start with the first one:
(+ 4 5)
(inc (+ 3 5))
(inc (inc (+ 2 5)))
(inc (inc (inc (+ 1 5))))
(inc (inc (inc (inc (+ 0 5)))))
(inc (inc (inc (inc 5))))
(inc (inc (inc 6)))
(inc (inc 7))
(inc 8)
=> 9

; So this is clearely a recursive process since the inc calls stack up until we get a down to 0, and then 
; we can increment the value.
;
; Now let's take a look at the second:
(+ 4 5)
(+ 3 6)
(+ 2 7)
(+ 1 8)
(+ 0 9)
=> 9
; This process is iterative, even though the procedure is syntactically recursive. All the operands are fully resolved
; with each call. 


